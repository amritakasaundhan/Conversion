
public static List<String> topNC (List<String> review,List<String> competitor ){
        List<String> topNC = new ArrayList<>();
        Map<String, Integer> map = new HashMap<>();
        PriorityQueue<String> queue = new PriorityQueue<>(
                (e1, e2) -> map.get(e1).equals(map.get(e2)) ? e2.compareTo(e1) : map.get(e1) - map.get(e2));

        for(int i = 0; i < review.size(); i++){
            for(int j = 0 ;j <competitor.size(); j++ ){
                if(review.get(i).contains(competitor.get(j))){
                    int count = map.getOrDefault(competitor.get(j), 0);
                    map.put(competitor.get(j), count+1);
                }
            }
        }
        for(Map.Entry<String, Integer> element : map.entrySet() ){
            queue.offer(element.getKey());
            if(queue.size()>2){
                queue.poll();
            }
        }
        while(!queue.isEmpty()){
            topNC.add(queue.poll());
        }
        Collections.reverse(topNC);
        return topNC;
    }
